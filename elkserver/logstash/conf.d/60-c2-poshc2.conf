# Part of RedELK
#
# In this file we configure the logstash filtes for PoshC2 logs
#
# Author: Outflank B.V. / Marc Smeets / @benpturner - Ben Turner
#

filter {
  if [infralogtype] == "rtops" and [pslogtype] == "events" {

    # Filebeat introduces the source field for the name of the log file path. But this collides with source object from the Elastic Common Schema.

     # Let's first trim the syslog-like info from the log line
    grok {
      match => { "message" => [ ".*" ] }
    }

    # matching lines like: *** initial implant
    if "PID:" in [message] and "Sleep:" in [message] {

      mutate {
        replace  => { "pslogtype" => "beacon_newbeacon" }
      }

      grok {
        match => { "message" => "%{IPORHOST:target_ipext}\:%{IPORHOST:target_port}\s+\|\s+Time:%{GREEDYDATA:time}\s+\|\s+PID:%{IPORHOST:target_pid}\s+\|\s+Sleep:%{GREEDYDATA:beacon_sleep}\s+\|\s+%{GREEDYDATA:target_user}\s+@\s+%{GREEDYDATA:target_hostname}\s+\(%{GREEDYDATA:beacon_arch}\)\s+\|\s+URL\:%{GREEDYDATA:beacon_url}" }
      }

      date {
        match => [ "time", "dd/MM/YYYY HH:mm:ss" ]
        target => "@timestamp"
        timezone => "Etc/UTC"
      }

      clone {
        clones => [ "beacondb" ]
        remove_field => [ "cslogtype","csmessage","host","infralogtype","message" ]
      }

    }

    # matching lines like: *** Screenshot captured:
    if "Screenshot captured:" in [message] {

      mutate {
        replace  => { "pslogtype" => "screenshots" }
      }

      grok {
        match => { "message" => "Screenshot\s+captured:\s+%{GREEDYDATA:screenshot}" }
      }

    }

    # matching lines like: *** Download:
    if "Download file" in [message] {

      mutate {
        replace  => { "pslogtype" => "downloads" }
      }

      grok {
        match => { "message" => "Download\s+file\s+part\s+%{GREEDYDATA:download}" }
      }

    }

    # matching lines like: *** Messages:
    if "Message from" in [message] or "logged off" in [message] or "logged on" in [message] {

      mutate {
        replace  => { "pslogtype" => "messages" }
      }

      grok {
        match => { "message" => "(0[1-9]|[12]\d|3[01])/(0[1-9]|1[0-2])/[12]\d{3}\s+([0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9]):%{GREEDYDATA:psmessage}" }
      }

    }

  }
}
